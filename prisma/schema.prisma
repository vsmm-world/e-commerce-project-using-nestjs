// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Admin {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  email           String
  isDeleted       Boolean           @default(false)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  adminCredential AdminCredential[]
}

model AdminCredential {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  admin     Admin     @relation(fields: [adminId], references: [id])
  adminId   String    @db.ObjectId
  token     String?
  expiresAt DateTime?
  password  String
  isDeleted Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model TempOtp {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  otp       String
  otpRef    String
  expiresAt DateTime
  tempId    String
  isDeleted Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Customer {
  id                 String               @id @default(auto()) @map("_id") @db.ObjectId
  name               String
  email              String
  status             String               @default("active")
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  isDeleted          Boolean              @default(false)
  cart               Cart[]
  order              Order[]
  payment            Payment[]
  customerCredential CustomerCredential[]
  address            Address[]
  customerReviews    CustomerReviews[]
  orderHistory       OrderHistory[]
}

model CustomerCredential {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  customer   Customer  @relation(fields: [customerId], references: [id])
  customerId String    @db.ObjectId
  token      String?
  expiresAt  DateTime?
  password   String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  isDeleted  Boolean   @default(false)
}

model Address {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  customer       Customer         @relation(fields: [customerId], references: [id])
  customerId     String           @db.ObjectId
  name           String
  street         String
  city           String
  state          String
  phone          String
  pincode        String
  isDefault      Boolean
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  isDeleted      Boolean          @default(false)
  shipmentStatus ShipmentStatus[]
}

model Product {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String
  category       Category         @relation(fields: [categoryId], references: [id])
  categoryId     String           @db.ObjectId
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  cart           Cart[]
  isDeleted      Boolean          @default(false)
  ProductVariant ProductVariant[]
}

model ProductVariant {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  product         Product           @relation(fields: [productId], references: [id])
  productId       String            @db.ObjectId
  size            String
  color           String
  stock           Int
  price           Float
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  isDeleted       Boolean           @default(false)
  cart            Cart[]
  CustomerReviews CustomerReviews[]
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  product   Product[]
  isDeleted Boolean   @default(false)
}

model Cart {
  id               String          @id @default(auto()) @map("_id") @db.ObjectId
  productIds       Json[]
  products         Json[]
  totalItems       Int
  totalPrice       Float
  isReminded       Boolean         @default(false)
  reminderDate     DateTime?
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  customer         Customer?       @relation(fields: [customerId], references: [id])
  customerId       String?         @db.ObjectId
  isDeleted        Boolean         @default(false)
  Product          Product?        @relation(fields: [productId], references: [id])
  productId        String?         @db.ObjectId
  ProductVariant   ProductVariant? @relation(fields: [productVariantId], references: [id])
  productVariantId String?         @db.ObjectId
}

model Order {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  productIds     Json[]
  products       Json[]
  customer       Customer         @relation(fields: [customerId], references: [id])
  customerId     String           @db.ObjectId
  tatalItems     Int
  totalPrice     Float
  payment        Payment          @relation(fields: [paymentId], references: [id])
  paymentId      String           @db.ObjectId
  paymentMethod  String
  paymentStatus  String
  orderDate      DateTime         @default(now())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  isDeleted      Boolean          @default(false)
  shipmentStatus ShipmentStatus[]
  orderHistory   OrderHistory[]
}

model ShipmentStatus {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  status    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  address   Address  @relation(fields: [addressId], references: [id])
  addressId String   @db.ObjectId
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String   @db.ObjectId
  isDeleted Boolean  @default(false)
}

model Payment {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  COD        Boolean
  pymentCred String?
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @db.ObjectId
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  order      Order[]
  isDeleted  Boolean  @default(false)
}

model TempResetToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String
  expiresAt DateTime
  tempId    String
  isDeleted Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CustomerReviews {
  id               String         @id @default(auto()) @map("_id") @db.ObjectId
  customer         Customer       @relation(fields: [customerId], references: [id])
  customerId       String         @db.ObjectId
  product          ProductVariant @relation(fields: [productVariantId], references: [id])
  productVariantId String         @db.ObjectId
  rating           Int
  review           String
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  isDeleted        Boolean        @default(false)
}

model OrderHistory {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  customer    Customer @relation(fields: [customerId], references: [id])
  customerId  String   @db.ObjectId
  order       Order    @relation(fields: [orderId], references: [id])
  orderId     String   @db.ObjectId
  status      String
  productsIds Json[]
  products    Json[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isDeleted   Boolean  @default(false)
}
